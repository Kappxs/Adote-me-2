Models é uma área que serve como o banco de dados da nossa aplicação, nela será utilizada as ideias que teremos ao longo do desenvolvimento no framework web

para o banco de dados, do adotante será interessante seguir:
{
    nome completo
    idade (10/10/2000)
    email
    senha e confirmação
}

BD ANIMAIS
{
    nome
    idade
    raça
    cor
    sexo
    esterilizado
    porte
    localização
    foto
    Breve Descrição
}

# Classe dos Animais
class Animal(db.Model):
    __tablename__= "animal" #nome da tabela já definida
    id = db.Column(db.Integer, primary_key=True)
    nome = db.Column(db.String(20), nullable=False)
    especie = db.Column(db.String(100), nullable=False)
    cor = db.Column(db.String(35), nullable=False)
    idade = db.Column(db.Integer, nullable=False)
    descricao = db.Column(db.Text)
    foto = db.Column(db.String(200))

    def __init__(self, nome, especie, cor, idade, descricao, foto):
        #animal("amora", "rotwalley", "branco", "12",...)
        self.nome= nome
        self.especie= especie
        self.cor= cor
        self.idade= idade
        self.descricao= descricao
        self.foto= foto
    def __repr__(self):
        return "<Animal %r>" % self.nome




class RegistrationForm(FlaskForm):
    name = StringField("nome", validators=[DataRequired()])
    email = StringField('Email', validators=[DataRequired(), Email()])
    password = PasswordField("password", validators=[DataRequired()])
    submit = SubmitField('Register')




<form action="" method="POST">
                {{form.csrf_token}}
                <div class="form-group">
                    <label>Nome</label> <br>
                    {{form.name(class="form-control", placeholder="Digite seu Nome")}}
                </div>
                <div class="form-group">
                    <label>Email</label><br>
                    {{form.email(class="form-control")}}
                        {% if form.email.errors %}
                    <div class="alert alert-danger" role="alert">
                        {form.email.errors}
                    </div>
                    {% endif %}
                </div>
                <div class="form-group">
                    <label>Password</label><br>
                    {{form.password(class="form-control")}}
                </div>
                
                <button type="submit" class="custom-btn">Cadastrar
                </button>

            </form>


<form action='' method="POST">
    {{ form.hidden_tag() }}
    <div class="row">
        <div class="col">
            <div class="form-group">
                <label>{{ form.name.label }}</label>
                {{ form.name(class="form-control") }}
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                <label>{{ form.email.label }}</label>
                {{ form.email(class="form-control") }}
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="form-group">
                <label>{{ form.password.label }}</label>
                {{ form.password(class="form-control") }}
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                <label>{{ form.confirm.label }}</label>
                {{ form.confirm(class="form-control") }}
            </div>
        </div>
    </div>
    <div class="form-group">
        {{ form.accept_tos() }} {{ form.accept_tos.label }}
    </div>
    <button type="submit" class="custom-btn">Submit</button>
</form>


                        <span class="text-danger">Insira um endereço de e-mail válido.</span>
                    {% endfor %}



@login_required



@app.route('/anunciar', methods=['GET', 'POST'])
def register_animal():
    form = AnimalForm()
    if form.validate_on_submit():
        foto = form.foto.data
        animal = Animal(
            nome=form.nome.data,
            especie=form.especie.data,
            cor=form.cor.data,
            idade=form.idade.data,
            descricao=form.descricao.data,
            esterilizado=form.esterilizado.data
        )
        db.session.add(animal)
        db.session.commit()
        return redirect(url_for('index'))
    return render_template('registro.html', form=form)