{ {from flask_script import Manager
from flask_migrate import migrate, MigrateCommand

migrate= Migrate(app,db)
manager= Manager(app) }} - Não existe Mais

#tava dando problema
from app.models import tables
pass
from app.controllers import default
pass

#app.cli.command
@app.cli.command("db")
def migrate_command():
    # Seu código de migração aqui
    pass



from flask_login import LoginManager
lm = LoginManager(app)



@app.route("/adocao")
def index():
    return render_template("index.html")
pass


@app.route("/cadastro")
def index():
    return 
pass


                    <label for="email">Email:</label>
                    <input type="email" id="email" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="password">Senha:</label>
                    <input type="password" id="password" class="form-control" required>
                </div>
                <button type="submit" class="custom-btn">Entrar</button>



@app.route("/teste/<info>")
@app.route("/teste", defaults={"info": None})
def teste(info):
    r= User.query.filter_by(username="jp").first()
    db.session.delete(r)
    db.session.commit()
    return "ok"


# Classe teste
class Post(db.Model):
    __tablename__ = "posts"
    id = db.Column(db.Integer, primary_key=True)
    content = db.Column(db.Text)
    user_id = db.Column(db.Integer, db.ForeignKey("users.id"))

    user= db.relationship("User", foreign_keys= user_id)
    def __init__(self, content, user_id):
        self.content = content
        self.user_id = user_id

    def __repr__(self):
        return "<post %r>" % self.id


with app.app_context():
    @app.route("/cadastro", methods=["GET", "POST"])
    def cadastro():
        form = RegistrationForm()
        if form.validate_on_submit():
            if request.method == "POST":
                name= request.form['name']
                email= request.form['email']
                password= request.form['password']
                user= User(name, email, password)
                db.session.add(user)
                db.session.commit()
        return render_template("cadastro.html", form=form)
    redirect(url_for("login"))



 user = User.query.filter_by(username=form.username.data).first()
        if user and user.password == form.data.password:
            flash('Entrada bem sucedida')
        else:
            flash('Entrada Inválida')
    else:
        print(form.errors)
        
    return render_template("login2.html", form=form)